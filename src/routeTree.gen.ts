/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WorkoutsRouteImport } from './routes/workouts'
import { Route as TemplatesRouteImport } from './routes/templates'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ExercisesExerciseIdRouteImport } from './routes/exercises_.$exerciseId'

const WorkoutsRoute = WorkoutsRouteImport.update({
  id: '/workouts',
  path: '/workouts',
  getParentRoute: () => rootRouteImport,
} as any)
const TemplatesRoute = TemplatesRouteImport.update({
  id: '/templates',
  path: '/templates',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ExercisesExerciseIdRoute = ExercisesExerciseIdRouteImport.update({
  id: '/exercises_/$exerciseId',
  path: '/exercises/$exerciseId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/templates': typeof TemplatesRoute
  '/workouts': typeof WorkoutsRoute
  '/exercises/$exerciseId': typeof ExercisesExerciseIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/templates': typeof TemplatesRoute
  '/workouts': typeof WorkoutsRoute
  '/exercises/$exerciseId': typeof ExercisesExerciseIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/templates': typeof TemplatesRoute
  '/workouts': typeof WorkoutsRoute
  '/exercises_/$exerciseId': typeof ExercisesExerciseIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/templates' | '/workouts' | '/exercises/$exerciseId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/templates' | '/workouts' | '/exercises/$exerciseId'
  id: '__root__' | '/' | '/templates' | '/workouts' | '/exercises_/$exerciseId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  TemplatesRoute: typeof TemplatesRoute
  WorkoutsRoute: typeof WorkoutsRoute
  ExercisesExerciseIdRoute: typeof ExercisesExerciseIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/workouts': {
      id: '/workouts'
      path: '/workouts'
      fullPath: '/workouts'
      preLoaderRoute: typeof WorkoutsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/templates': {
      id: '/templates'
      path: '/templates'
      fullPath: '/templates'
      preLoaderRoute: typeof TemplatesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/exercises_/$exerciseId': {
      id: '/exercises_/$exerciseId'
      path: '/exercises/$exerciseId'
      fullPath: '/exercises/$exerciseId'
      preLoaderRoute: typeof ExercisesExerciseIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  TemplatesRoute: TemplatesRoute,
  WorkoutsRoute: WorkoutsRoute,
  ExercisesExerciseIdRoute: ExercisesExerciseIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
